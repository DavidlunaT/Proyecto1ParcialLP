Lexical Analysis Log
User: test
File: test_errors.cs
Date: 11-07-2025-16h22

=== TOKENS ===
USING             'using'                        (line 1)
IDENTIFIER        'System'                       (line 1)
SEMICOLON         ';'                            (line 1)
CLASS             'class'                        (line 3)
IDENTIFIER        'TestErrors'                   (line 3)
OPEN_BRACE        '{'                            (line 4)
STATIC            'static'                       (line 5)
VOID              'void'                         (line 5)
IDENTIFIER        'Main'                         (line 5)
OPEN_PAREN        '('                            (line 5)
CLOSE_PAREN       ')'                            (line 5)
OPEN_BRACE        '{'                            (line 6)
CONSOLE           'Console'                      (line 8)
DOT               '.'                            (line 8)
WRITELINE         'WriteLine'                    (line 8)
OPEN_PAREN        '('                            (line 8)
STRING            '=== Testing undeclared variables ===' (line 8)
CLOSE_PAREN       ')'                            (line 8)
SEMICOLON         ';'                            (line 8)
INT_TYPE          'int'                          (line 11)
IDENTIFIER        'result1'                      (line 11)
ASSIGN            '='                            (line 11)
IDENTIFIER        'x'                            (line 11)
PLUS              '+'                            (line 11)
IDENTIFIER        'y'                            (line 11)
SEMICOLON         ';'                            (line 11)
IF                'if'                           (line 14)
OPEN_PAREN        '('                            (line 14)
IDENTIFIER        'undeclaredVar'                (line 14)
GREATER_THAN      '>'                            (line 14)
INTEGER           5                              (line 14)
CLOSE_PAREN       ')'                            (line 14)
OPEN_BRACE        '{'                            (line 15)
CONSOLE           'Console'                      (line 16)
DOT               '.'                            (line 16)
WRITELINE         'WriteLine'                    (line 16)
OPEN_PAREN        '('                            (line 16)
STRING            "This won't work"              (line 16)
CLOSE_PAREN       ')'                            (line 16)
SEMICOLON         ';'                            (line 16)
CLOSE_BRACE       '}'                            (line 17)
IDENTIFIER        'notDeclared'                  (line 20)
ASSIGN            '='                            (line 20)
INTEGER           42                             (line 20)
SEMICOLON         ';'                            (line 20)
CONSOLE           'Console'                      (line 24)
DOT               '.'                            (line 24)
WRITELINE         'WriteLine'                    (line 24)
OPEN_PAREN        '('                            (line 24)
STRING            '=== Testing type compatibility ===' (line 24)
CLOSE_PAREN       ')'                            (line 24)
SEMICOLON         ';'                            (line 24)
INT_TYPE          'int'                          (line 27)
IDENTIFIER        'number'                       (line 27)
ASSIGN            '='                            (line 27)
INTEGER           10                             (line 27)
SEMICOLON         ';'                            (line 27)
STRING_TYPE       'string'                       (line 28)
IDENTIFIER        'text'                         (line 28)
ASSIGN            '='                            (line 28)
STRING            'Hello'                        (line 28)
SEMICOLON         ';'                            (line 28)
FLOAT_TYPE        'float'                        (line 29)
IDENTIFIER        'decimal_num'                  (line 29)
ASSIGN            '='                            (line 29)
FLOAT             3.14                           (line 29)
SEMICOLON         ';'                            (line 29)
BOOL_TYPE         'bool'                         (line 30)
IDENTIFIER        'flag'                         (line 30)
ASSIGN            '='                            (line 30)
TRUE              'true'                         (line 30)
SEMICOLON         ';'                            (line 30)
INT_TYPE          'int'                          (line 33)
IDENTIFIER        'badResult1'                   (line 33)
ASSIGN            '='                            (line 33)
IDENTIFIER        'number'                       (line 33)
PLUS              '+'                            (line 33)
IDENTIFIER        'flag'                         (line 33)
SEMICOLON         ';'                            (line 33)
INT_TYPE          'int'                          (line 34)
IDENTIFIER        'badResult2'                   (line 34)
ASSIGN            '='                            (line 34)
IDENTIFIER        'text'                         (line 34)
MULTIPLY          '*'                            (line 34)
IDENTIFIER        'number'                       (line 34)
SEMICOLON         ';'                            (line 34)
FLOAT_TYPE        'float'                        (line 35)
IDENTIFIER        'badResult3'                   (line 35)
ASSIGN            '='                            (line 35)
IDENTIFIER        'decimal_num'                  (line 35)
DIVIDE            '/'                            (line 35)
IDENTIFIER        'text'                         (line 35)
SEMICOLON         ';'                            (line 35)
BOOL_TYPE         'bool'                         (line 38)
IDENTIFIER        'badComp1'                     (line 38)
ASSIGN            '='                            (line 38)
IDENTIFIER        'text'                         (line 38)
GREATER_THAN      '>'                            (line 38)
IDENTIFIER        'number'                       (line 38)
SEMICOLON         ';'                            (line 38)
BOOL_TYPE         'bool'                         (line 39)
IDENTIFIER        'badComp2'                     (line 39)
ASSIGN            '='                            (line 39)
IDENTIFIER        'flag'                         (line 39)
LESS_THAN         '<'                            (line 39)
IDENTIFIER        'decimal_num'                  (line 39)
SEMICOLON         ';'                            (line 39)
CONSOLE           'Console'                      (line 43)
DOT               '.'                            (line 43)
WRITELINE         'WriteLine'                    (line 43)
OPEN_PAREN        '('                            (line 43)
STRING            '=== Testing assignment errors ===' (line 43)
CLOSE_PAREN       ')'                            (line 43)
SEMICOLON         ';'                            (line 43)
INT_TYPE          'int'                          (line 46)
IDENTIFIER        'wrongInt'                     (line 46)
ASSIGN            '='                            (line 46)
STRING            'not a number'                 (line 46)
SEMICOLON         ';'                            (line 46)
STRING_TYPE       'string'                       (line 47)
IDENTIFIER        'wrongString'                  (line 47)
ASSIGN            '='                            (line 47)
INTEGER           123                            (line 47)
SEMICOLON         ';'                            (line 47)
BOOL_TYPE         'bool'                         (line 48)
IDENTIFIER        'wrongBool'                    (line 48)
ASSIGN            '='                            (line 48)
INTEGER           5                              (line 48)
SEMICOLON         ';'                            (line 48)
FLOAT_TYPE        'float'                        (line 49)
IDENTIFIER        'wrongFloat'                   (line 49)
ASSIGN            '='                            (line 49)
IDENTIFIER        'flag'                         (line 49)
SEMICOLON         ';'                            (line 49)
CONSOLE           'Console'                      (line 52)
DOT               '.'                            (line 52)
WRITELINE         'WriteLine'                    (line 52)
OPEN_PAREN        '('                            (line 52)
STRING            '=== Testing control structure errors ===' (line 52)
CLOSE_PAREN       ')'                            (line 52)
SEMICOLON         ';'                            (line 52)
IF                'if'                           (line 55)
OPEN_PAREN        '('                            (line 55)
IDENTIFIER        'nonExistentVar'               (line 55)
EQUAL             '=='                           (line 55)
INTEGER           10                             (line 55)
CLOSE_PAREN       ')'                            (line 55)
OPEN_BRACE        '{'                            (line 56)
CONSOLE           'Console'                      (line 57)
DOT               '.'                            (line 57)
WRITELINE         'WriteLine'                    (line 57)
OPEN_PAREN        '('                            (line 57)
STRING            'Using undeclared variable in condition' (line 57)
CLOSE_PAREN       ')'                            (line 57)
SEMICOLON         ';'                            (line 57)
CLOSE_BRACE       '}'                            (line 58)
CONSOLE           'Console'                      (line 62)
DOT               '.'                            (line 62)
WRITELINE         'WriteLine'                    (line 62)
OPEN_PAREN        '('                            (line 62)
STRING            '=== Testing array errors ===' (line 62)
CLOSE_PAREN       ')'                            (line 62)
SEMICOLON         ';'                            (line 62)
INT_TYPE          'int'                          (line 65)
IDENTIFIER        'element'                      (line 65)
ASSIGN            '='                            (line 65)
IDENTIFIER        'nonExistentArray'             (line 65)
OPEN_BRACKET      '['                            (line 65)
INTEGER           0                              (line 65)
CLOSE_BRACKET     ']'                            (line 65)
SEMICOLON         ';'                            (line 65)
INT_TYPE          'int'                          (line 68)
OPEN_BRACKET      '['                            (line 68)
CLOSE_BRACKET     ']'                            (line 68)
IDENTIFIER        'validArray'                   (line 68)
ASSIGN            '='                            (line 68)
OPEN_BRACE        '{'                            (line 68)
INTEGER           1                              (line 68)
COMMA             ','                            (line 68)
INTEGER           2                              (line 68)
COMMA             ','                            (line 68)
INTEGER           3                              (line 68)
COMMA             ','                            (line 68)
INTEGER           4                              (line 68)
COMMA             ','                            (line 68)
INTEGER           5                              (line 68)
CLOSE_BRACE       '}'                            (line 68)
SEMICOLON         ';'                            (line 68)
INT_TYPE          'int'                          (line 69)
IDENTIFIER        'badElement1'                  (line 69)
ASSIGN            '='                            (line 69)
IDENTIFIER        'validArray'                   (line 69)
OPEN_BRACKET      '['                            (line 69)
IDENTIFIER        'text'                         (line 69)
CLOSE_BRACKET     ']'                            (line 69)
SEMICOLON         ';'                            (line 69)
INT_TYPE          'int'                          (line 70)
IDENTIFIER        'badElement2'                  (line 70)
ASSIGN            '='                            (line 70)
IDENTIFIER        'validArray'                   (line 70)
OPEN_BRACKET      '['                            (line 70)
IDENTIFIER        'flag'                         (line 70)
CLOSE_BRACKET     ']'                            (line 70)
SEMICOLON         ';'                            (line 70)
INT_TYPE          'int'                          (line 71)
IDENTIFIER        'badElement3'                  (line 71)
ASSIGN            '='                            (line 71)
IDENTIFIER        'validArray'                   (line 71)
OPEN_BRACKET      '['                            (line 71)
IDENTIFIER        'decimal_num'                  (line 71)
CLOSE_BRACKET     ']'                            (line 71)
SEMICOLON         ';'                            (line 71)
CONSOLE           'Console'                      (line 74)
DOT               '.'                            (line 74)
WRITELINE         'WriteLine'                    (line 74)
OPEN_PAREN        '('                            (line 74)
STRING            '=== Testing dictionary errors ===' (line 74)
CLOSE_PAREN       ')'                            (line 74)
SEMICOLON         ';'                            (line 74)
DICTIONARY        'Dictionary'                   (line 77)
LESS_THAN         '<'                            (line 77)
STRING_TYPE       'string'                       (line 77)
COMMA             ','                            (line 77)
INT_TYPE          'int'                          (line 77)
GREATER_THAN      '>'                            (line 77)
IDENTIFIER        'scores'                       (line 77)
ASSIGN            '='                            (line 77)
NEW               'new'                          (line 77)
DICTIONARY        'Dictionary'                   (line 77)
LESS_THAN         '<'                            (line 77)
STRING_TYPE       'string'                       (line 77)
COMMA             ','                            (line 77)
INT_TYPE          'int'                          (line 77)
GREATER_THAN      '>'                            (line 77)
OPEN_PAREN        '('                            (line 77)
CLOSE_PAREN       ')'                            (line 77)
SEMICOLON         ';'                            (line 77)
IDENTIFIER        'scores'                       (line 80)
OPEN_BRACKET      '['                            (line 80)
INTEGER           42                             (line 80)
CLOSE_BRACKET     ']'                            (line 80)
ASSIGN            '='                            (line 80)
INTEGER           100                            (line 80)
SEMICOLON         ';'                            (line 80)
IDENTIFIER        'scores'                       (line 83)
OPEN_BRACKET      '['                            (line 83)
STRING            'John'                         (line 83)
CLOSE_BRACKET     ']'                            (line 83)
ASSIGN            '='                            (line 83)
STRING            'A+'                           (line 83)
SEMICOLON         ';'                            (line 83)
IF                'if'                           (line 86)
OPEN_PAREN        '('                            (line 86)
IDENTIFIER        'scores'                       (line 86)
OPEN_BRACKET      '['                            (line 86)
STRING            'John'                         (line 86)
CLOSE_BRACKET     ']'                            (line 86)
GREATER_THAN      '>'                            (line 86)
INTEGER           0                              (line 86)
CLOSE_PAREN       ')'                            (line 86)
OPEN_BRACE        '{'                            (line 86)
CLOSE_BRACE       '}'                            (line 86)
DICTIONARY        'Dictionary'                   (line 89)
LESS_THAN         '<'                            (line 89)
INT_TYPE          'int'                          (line 89)
COMMA             ','                            (line 89)
STRING_TYPE       'string'                       (line 89)
GREATER_THAN      '>'                            (line 89)
IDENTIFIER        'undeclaredDict'               (line 89)
SEMICOLON         ';'                            (line 89)
IDENTIFIER        'undeclaredDict'               (line 90)
OPEN_BRACKET      '['                            (line 90)
INTEGER           1                              (line 90)
CLOSE_BRACKET     ']'                            (line 90)
ASSIGN            '='                            (line 90)
STRING            'test'                         (line 90)
SEMICOLON         ';'                            (line 90)
DICTIONARY        'Dictionary'                   (line 93)
LESS_THAN         '<'                            (line 93)
STRING_TYPE       'string'                       (line 93)
COMMA             ','                            (line 93)
INT_TYPE          'int'                          (line 93)
GREATER_THAN      '>'                            (line 93)
IDENTIFIER        'wrongInit'                    (line 93)
ASSIGN            '='                            (line 93)
NEW               'new'                          (line 93)
DICTIONARY        'Dictionary'                   (line 93)
LESS_THAN         '<'                            (line 93)
STRING_TYPE       'string'                       (line 93)
COMMA             ','                            (line 93)
INT_TYPE          'int'                          (line 93)
GREATER_THAN      '>'                            (line 93)
OPEN_PAREN        '('                            (line 93)
CLOSE_PAREN       ')'                            (line 93)
SEMICOLON         ';'                            (line 93)
IDENTIFIER        'wrongInit'                    (line 94)
OPEN_BRACKET      '['                            (line 94)
INTEGER           42                             (line 94)
CLOSE_BRACKET     ']'                            (line 94)
ASSIGN            '='                            (line 94)
STRING            'wrong'                        (line 94)
SEMICOLON         ';'                            (line 94)
IDENTIFIER        'wrongInit'                    (line 95)
OPEN_BRACKET      '['                            (line 95)
STRING            'ok'                           (line 95)
CLOSE_BRACKET     ']'                            (line 95)
ASSIGN            '='                            (line 95)
FALSE             'false'                        (line 95)
SEMICOLON         ';'                            (line 95)
IDENTIFIER        'unknownVariable'              (line 98)
ASSIGN            '='                            (line 98)
IDENTIFIER        'text'                         (line 98)
SEMICOLON         ';'                            (line 98)
CONSOLE           'Console'                      (line 101)
DOT               '.'                            (line 101)
WRITELINE         'WriteLine'                    (line 101)
OPEN_PAREN        '('                            (line 101)
STRING            '=== Testing function call errors ===' (line 101)
CLOSE_PAREN       ')'                            (line 101)
SEMICOLON         ';'                            (line 101)
IDENTIFIER        'UndeclaredFunction'           (line 104)
OPEN_PAREN        '('                            (line 104)
IDENTIFIER        'number'                       (line 104)
CLOSE_PAREN       ')'                            (line 104)
SEMICOLON         ';'                            (line 104)
CONSOLE           'Console'                      (line 108)
DOT               '.'                            (line 108)
WRITELINE         'WriteLine'                    (line 108)
OPEN_PAREN        '('                            (line 108)
STRING            '=== Testing complex mixed errors ===' (line 108)
CLOSE_PAREN       ')'                            (line 108)
SEMICOLON         ';'                            (line 108)
INT_TYPE          'int'                          (line 111)
IDENTIFIER        'complexError'                 (line 111)
ASSIGN            '='                            (line 111)
IDENTIFIER        'undeclaredA'                  (line 111)
PLUS              '+'                            (line 111)
IDENTIFIER        'undeclaredB'                  (line 111)
SEMICOLON         ';'                            (line 111)
IF                'if'                           (line 114)
OPEN_PAREN        '('                            (line 114)
IDENTIFIER        'missingX'                     (line 114)
GREATER_THAN      '>'                            (line 114)
IDENTIFIER        'missingY'                     (line 114)
CLOSE_PAREN       ')'                            (line 114)
OPEN_BRACE        '{'                            (line 115)
IDENTIFIER        'wrongTarget'                  (line 116)
ASSIGN            '='                            (line 116)
IDENTIFIER        'number'                       (line 116)
SEMICOLON         ';'                            (line 116)
CLOSE_BRACE       '}'                            (line 117)
CONSOLE           'Console'                      (line 119)
DOT               '.'                            (line 119)
WRITELINE         'WriteLine'                    (line 119)
OPEN_PAREN        '('                            (line 119)
STRING            'End of error testing'         (line 119)
CLOSE_PAREN       ')'                            (line 119)
SEMICOLON         ';'                            (line 119)
CLOSE_BRACE       '}'                            (line 120)
CLOSE_BRACE       '}'                            (line 121)

No lexical errors detected.
