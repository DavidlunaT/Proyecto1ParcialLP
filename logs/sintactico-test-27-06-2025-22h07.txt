Syntax Analysis Log
User: test
File: test_errors.cs
Date: 27-06-2025-22h07

âœ” Syntax analysis completed successfully.

=== ABSTRACT SYNTAX TREE ===
(program,
  [
    (using,
      "System"
    )
  ],
  [
    (class,
      "internal",
      "TestErrors",
      [
        (method,
          "internal",
          True,
          "void",
          "Main",
          [],
          [
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing undeclared variables ==="
              )
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "result1",
                  (binary_op,
                    "+",
                    "x",
                    "y"
                  )
                )
              ]
            ),
            (if,
              (comparison,
                ">",
                "undeclaredVar",
                (literal,
                  "int",
                  5
                )
              ),
              (block,
                [
                  (print,
                    "WriteLine",
                    (literal,
                      "str",
                      "This won't work"
                    )
                  )
                ]
              ),
              None
            ),
            (assignment,
              "notDeclared",
              (literal,
                "int",
                42
              )
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing type compatibility ==="
              )
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "number",
                  (literal,
                    "int",
                    10
                  )
                )
              ]
            ),
            (multi_declaration,
              "string",
              [
                (declarator,
                  "text",
                  (literal,
                    "str",
                    "Hello"
                  )
                )
              ]
            ),
            (multi_declaration,
              "float",
              [
                (declarator,
                  "decimal_num",
                  (literal,
                    "float",
                    3.14
                  )
                )
              ]
            ),
            (multi_declaration,
              "bool",
              [
                (declarator,
                  "flag",
                  "true"
                )
              ]
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "badResult1",
                  (binary_op,
                    "+",
                    "number",
                    "flag"
                  )
                )
              ]
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "badResult2",
                  (binary_op,
                    "*",
                    "text",
                    "number"
                  )
                )
              ]
            ),
            (multi_declaration,
              "float",
              [
                (declarator,
                  "badResult3",
                  (binary_op,
                    "/",
                    "decimal_num",
                    "text"
                  )
                )
              ]
            ),
            (multi_declaration,
              "bool",
              [
                (declarator,
                  "badComp1",
                  (comparison,
                    ">",
                    "text",
                    "number"
                  )
                )
              ]
            ),
            (multi_declaration,
              "bool",
              [
                (declarator,
                  "badComp2",
                  (comparison,
                    "<",
                    "flag",
                    "decimal_num"
                  )
                )
              ]
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing assignment errors ==="
              )
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "wrongInt",
                  (literal,
                    "str",
                    "not a number"
                  )
                )
              ]
            ),
            (multi_declaration,
              "string",
              [
                (declarator,
                  "wrongString",
                  (literal,
                    "int",
                    123
                  )
                )
              ]
            ),
            (multi_declaration,
              "bool",
              [
                (declarator,
                  "wrongBool",
                  (literal,
                    "int",
                    5
                  )
                )
              ]
            ),
            (multi_declaration,
              "float",
              [
                (declarator,
                  "wrongFloat",
                  "flag"
                )
              ]
            ),
            (assignment,
              "unknownVariable",
              "text"
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing control structure errors ==="
              )
            ),
            (if,
              (comparison,
                "==",
                "nonExistentVar",
                (literal,
                  "int",
                  10
                )
              ),
              (block,
                [
                  (print,
                    "WriteLine",
                    (literal,
                      "str",
                      "Using undeclared variable in condition"
                    )
                  )
                ]
              ),
              None
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing array errors ==="
              )
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "element",
                  (array_access,
                    "nonExistentArray",
                    (literal,
                      "int",
                      0
                    )
                  )
                )
              ]
            ),
            (multi_declaration,
              (array_type,
                "int"
              ),
              [
                (declarator,
                  "validArray",
                  (array_literal,
                    [
                      (literal,
                        "int",
                        1
                      ),
                      (literal,
                        "int",
                        2
                      ),
                      (literal,
                        "int",
                        3
                      ),
                      (literal,
                        "int",
                        4
                      ),
                      (literal,
                        "int",
                        5
                      )
                    ]
                  )
                )
              ]
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "badElement1",
                  (array_access,
                    "validArray",
                    "text"
                  )
                )
              ]
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "badElement2",
                  (array_access,
                    "validArray",
                    "flag"
                  )
                )
              ]
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "badElement3",
                  (array_access,
                    "validArray",
                    "decimal_num"
                  )
                )
              ]
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing function call errors ==="
              )
            ),
            (expression_stmt,
              (function_call,
                "UndeclaredFunction",
                [
                  "number"
                ]
              )
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "=== Testing complex mixed errors ==="
              )
            ),
            (multi_declaration,
              "int",
              [
                (declarator,
                  "complexError",
                  (binary_op,
                    "+",
                    "undeclaredA",
                    "undeclaredB"
                  )
                )
              ]
            ),
            (if,
              (comparison,
                ">",
                "missingX",
                "missingY"
              ),
              (block,
                [
                  (assignment,
                    "wrongTarget",
                    "number"
                  )
                ]
              ),
              None
            ),
            (print,
              "WriteLine",
              (literal,
                "str",
                "End of error testing"
              )
            )
          ]
        )
      ]
    )
  ]
)